sudo: required
dist: trusty
language: cpp
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - llvm-toolchain-trusty

# we're not using combination parameters here to ensure that the builds
# run in the order we want. (We want to perform the fastest tests first so
# failed tests appear as early as possible).
env:
  global:
    - PATH=/usr/local/bin:$PATH

# NOTE: The compiler setting is unused. It simply makes the display on
# travis-ci.org more readable.
# WARNING: do not use the name CXX. Travis will ignore the value here.
matrix:
  include:
    # QUICKTEST----------------------------------------------------------------
    # default version for gcc in trusty is 4.8; c4stl won't work with it.
    - env: CXX_=g++-5 A=64 BT=Quicktest
    - env: CXX_=g++-5 A=32 BT=Quicktest
    #
    #
    - env: CXX_=g++-6 A=64 BT=Quicktest
    - env: CXX_=g++-6 A=32 BT=Quicktest
    #
    #
    - env: CXX_=g++-7 A=64 BT=Quicktest
    - env: CXX_=g++-7 A=32 BT=Quicktest
    #
    # ----------- clang without sanitizers (faster)
    #
    - env: CXX_=clang++-3.6 A=64 BT=Quicktest
    - env: CXX_=clang++-3.6 A=32 BT=Quicktest
    #
    #
    - env: CXX_=clang++-3.7 A=64 BT=Quicktest
    - env: CXX_=clang++-3.7 A=32 BT=Quicktest
    #
    #
    - env: CXX_=clang++-3.8 A=64 BT=Quicktest
    - env: CXX_=clang++-3.8 A=32 BT=Quicktest
    #
    #
    - env: CXX_=clang++-3.9 A=64 BT=Quicktest
    - env: CXX_=clang++-3.9 A=32 BT=Quicktest
    #
    # ----------- clang with sanitizers (slower)
    #
    - env: CXX_=clang++-3.6 A=64 BT=Quicktest SAN=ALL
    - env: CXX_=clang++-3.6 A=32 BT=Quicktest SAN=ALL
    #
    #
    - env: CXX_=clang++-3.7 A=64 BT=Quicktest SAN=ALL
    - env: CXX_=clang++-3.7 A=32 BT=Quicktest SAN=ALL
    #
    #
    - env: CXX_=clang++-3.8 A=64 BT=Quicktest SAN=ALL
    - env: CXX_=clang++-3.8 A=32 BT=Quicktest SAN=ALL
    #
    #
    - env: CXX_=clang++-3.9 A=64 BT=Quicktest SAN=ALL
    - env: CXX_=clang++-3.9 A=32 BT=Quicktest SAN=ALL
    #
    # ----------- Coverage (covers all tests, slow) -------------------------
    #
    #- env: CXX_=g++-6 A=64 BT=Coverage
    #
    # DEBUG----------------------------------------------------------------
    # ----------- Debug (covers all tests, slow)
    # valgrind is switched off to prevent exceeding the max travis time
    - env: CXX_=g++-6 A=64 BT=Debug VG=OFF  
    - env: CXX_=g++-6 A=32 BT=Debug VG=OFF
    #
    #
    - env: CXX_=clang++-3.9 A=64 BT=Debug
    - env: CXX_=clang++-3.9 A=32 BT=Debug
    #
    # RELEASE----------------------------------------------------------------
    # ----------- Release (covers all tests, slow)
    #
    - env: CXX_=g++-6 A=64 BT=Release
    - env: CXX_=g++-6 A=32 BT=Release
    #
    #
    - env: CXX_=clang++-3.9 A=64 BT=Release
    - env: CXX_=clang++-3.9 A=32 BT=Release
    #
    # ----------- Full sanitize (covers all type combination in the tests, VERY slow) ---------------
    # the sanitizers are run one at a time to prevent exceeding the max travis time
    #
    - env: CXX_=clang++-3.9 A=64 BT=Debug SAN=ASAN VG=OFF
    - env: CXX_=clang++-3.9 A=32 BT=Debug SAN=ASAN VG=OFF
    #
    - env: CXX_=clang++-3.9 A=64 BT=Debug SAN=TSAN VG=OFF
    - env: CXX_=clang++-3.9 A=32 BT=Debug SAN=TSAN VG=OFF
    #
    - env: CXX_=clang++-3.9 A=64 BT=Debug SAN=MSAN VG=OFF
    - env: CXX_=clang++-3.9 A=32 BT=Debug SAN=MSAN VG=OFF
    #
    - env: CXX_=clang++-3.9 A=64 BT=Debug SAN=UBSAN VG=OFF
    - env: CXX_=clang++-3.9 A=32 BT=Debug SAN=UBSAN VG=OFF


#before_script:
#  - sudo add-apt-repository -y ppa:george-edison55/cmake-3.x
#  - sudo apt-get update
#  - sudo apt-get -y install cmake

install:
  - bash -x .ci/travis-install.sh

script:
  - bash -x .ci/travis-test.sh

after_success:
  - echo "Success!"
  #- if [ "${BT}" == "Coverage" -a "${TRAVIS_OS_NAME}" == "linux" ]; then
  #    coveralls --include src --include include --gcov-options '\-lp' --root .. --build-root .;
  #  fi
