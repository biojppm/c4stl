sudo: required
dist: trusty
language: cpp

env:
  global:
    - /usr/local/bin:$PATH

# NOTE: The compiler setting is unused. It simply makes the display on
# travis-ci.org more readable.
matrix:
  include:
    # QUICKTEST----------------------------------------------------------------
    # default version for gcc in trusty is 4.8; c4stl won't work with it.
    - compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env: COMPILER=g++-5 BUILD_TYPE=Quicktest CMK_ARGS="-DC4STL_PEDANTIC=ON -DC4STL_WERROR=ON"
    - compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
            - g++-5-multilib
      env: COMPILER=g++-5 EXTRA_FLAGS="-m32" BUILD_TYPE=Quicktest CMK_ARGS="-DC4STL_PEDANTIC=ON -DC4STL_WERROR=ON"
    #
    #
    - compiler: clang
      addons:
        apt:
          packages:
            - clang-3.7
      env: COMPILER=clang++-3.7 BUILD_TYPE=Quicktest CMK_ARGS="-DC4STL_PEDANTIC=ON -DC4STL_WERROR=ON"
    - compiler: clang-3
      addons:
        apt:
          packages:
            - clang-3.7
            - g++-5-multilib
      env: COMPILER=clang++-3.7 EXTRA_FLAGS="-m32" BUILD_TYPE=Quicktest CMK_ARGS="-DC4STL_PEDANTIC=ON -DC4STL_WERROR=ON"
    #
    #
    - compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      env: COMPILER=g++-6 BUILD_TYPE=Quicktest
    - compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
            - g++-6-multilib
      env: COMPILER=g++-6 EXTRA_FLAGS="-m32" BUILD_TYPE=Quicktest
###     #
###     #
###     - compiler: clang3.8
###       addons:
###         apt:
###           packages:
###             - clang-3.8
###       env: COMPILER=clang++-3.8 BUILD_TYPE=QuickTest
###     - compiler: clang3.8_32
###       addons:
###         apt:
###           packages:
###             - clang-3.8
###             - g++-5-multilib
###       env: COMPILER=clang++-3.8 EXTRA_FLAGS="-m32" BUILD_TYPE=QuickTest
###     ##
###     ##
###     #- compiler: clang3.9
###     #  addons:
###     #    apt:
###     #      sources:
###     #        - llvm-toolchain-precise-3.9
###     #      packages:
###     #        - clang-3.9
###     #  env: COMPILER=clang++-3.9 EXTRA_FLAGS="-m32" BUILD_TYPE=QuickTest
###     #- compiler: clang3.9_32
###     #  addons:
###     #    apt:
###     #      sources:
###     #        - llvm-toolchain-precise-3.9
###     #      packages:
###     #        - clang-3.9
###     #        - g++-5-multilib
###     #  env: COMPILER=clang++-3.9 EXTRA_FLAGS="-m32" BUILD_TYPE=QuickTest
###     ##
###     ##
###     #- compiler: clang4.0
###     #  addons:
###     #    apt:
###     #      sources:
###     #        - llvm-toolchain-precise-4.0
###     #      packages:
###     #        - clang-4.0
###     #  env: COMPILER=clang++-4.0 BUILD_TYPE=QuickTest
###     #- compiler: clang4.0_32
###     #  addons:
###     #    apt:
###     #      sources:
###     #        - llvm-toolchain-precise-4.0
###     #      packages:
###     #        - clang-4.0
###     #        - g++-6-multilib
###     #  env: COMPILER=clang++-4.0 EXTRA_FLAGS="-m32" BUILD_TYPE=QuickTest
###     #
###     # DEBUG----------------------------------------------------------------
###     # debug builds of the tests are slow to build, so there's less testing.
###     - compiler: gcc5
###       addons:
###         apt:
###           sources:
###             - ubuntu-toolchain-r-test
###           packages:
###             - g++-5
###       env: COMPILER=g++-5 BUILD_TYPE=Debug
###     - compiler: gcc5_32
###       addons:
###         apt:
###           sources:
###             - ubuntu-toolchain-r-test
###           packages:
###             - g++-5
###             - g++-5-multilib
###       env: COMPILER=g++-5 EXTRA_FLAGS="-m32" BUILD_TYPE=Debug
###     #
###     #
###     - compiler: clang3.8
###       addons:
###         apt:
###           packages:
###             - clang-3.8
###       env: COMPILER=clang++-3.8 BUILD_TYPE=Debug
###     - compiler: clang3.8_32
###       addons:
###         apt:
###           packages:
###             - clang-3.8
###             - g++-5-multilib
###       env: COMPILER=clang++-3.8 EXTRA_FLAGS="-m32" BUILD_TYPE=Debug
###     #
###     # RELEASE----------------------------------------------------------------
###     # debug builds of the tests are slow to build, so there's less testing.
###     - compiler: gcc5
###       addons:
###         apt:
###           sources:
###             - ubuntu-toolchain-r-test
###           packages:
###             - g++-5
###       env: COMPILER=g++-5 BUILD_TYPE=Debug
###     - compiler: gcc5_32
###       addons:
###         apt:
###           sources:
###             - ubuntu-toolchain-r-test
###           packages:
###             - g++-5
###             - g++-5-multilib
###       env: COMPILER=g++-5 EXTRA_FLAGS="-m32" BUILD_TYPE=Debug
###     #
###     #
###     - compiler: clang3.8
###       addons:
###         apt:
###           packages:
###             - clang-3.8
###       env: COMPILER=clang++-3.8 BUILD_TYPE=Debug
###     - compiler: clang3.8_32
###       addons:
###         apt:
###           packages:
###             - clang-3.8
###             - g++-5-multilib
###       env: COMPILER=clang++-3.8 EXTRA_FLAGS="-m32" BUILD_TYPE=Debug
###     #
###     # COVERAGE----------------------------------------------------------------
###     - compiler: gcc5
###       addons:
###         apt:
###           sources:
###             - ubuntu-toolchain-r-test
###           packages:
###             - g++-5
###       env: COMPILER=g++-5 BUILD_TYPE=Coverage


#before_script:
#  - sudo add-apt-repository -y ppa:george-edison55/cmake-3.x
#  - sudo apt-get update
#  - sudo apt-get -y install cmake

install:
  - export C_COMPILER=$(echo "$COMPILER" | sed 's:clang++:clang:g' | sed 's:g++:gcc:g')
  - $COMPILER --version
  - $C_COMPILER --version
  - cmake --version
  - sudo apt-get install valgrind
  - if [ "${BUILD_TYPE}" == "Coverage" -a "${TRAVIS_OS_NAME}" == "linux" ]; then
      PATH=~/.local/bin:${PATH};
      pip install --user --upgrade pip;
      pip install --user cpp-coveralls;
    fi
  - export cmkargs="-DCMAKE_C_COMPILER=${C_COMPILER} -DCMAKE_CXX_COMPILER=${COMPILER}"
  # compile and install external libraries
  - mkdir -p build/extern_build && cd build/extern_build
  - pwd
  - echo $cmkargs
  - cmake ${cmkargs} -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS="${EXTRA_FLAGS}" -DCMAKE_INSTALL_PREFIX=`pwd`/../extern_install ../../extern
  - cmake --build . --config Release
  - cd -

script:
  - echo $cmkargs
  - cd build
  - pwd
  - cmake $cmkargs -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DCMAKE_CXX_FLAGS="${EXTRA_FLAGS}" -DC4STL_EXTERN_DIR=`pwd`/extern_install -DC4STL_CTEST_OPTIONS="-V" ${CMK_ARGS} ..
  - make CTEST_OUTPUT_ON_FAILURE=1 c4stl-test

after_success:
  - echo "Success!"
  #- if [ "${BUILD_TYPE}" == "Coverage" -a "${TRAVIS_OS_NAME}" == "linux" ]; then
  #    coveralls --include src --include include --gcov-options '\-lp' --root .. --build-root .;
  #  fi
