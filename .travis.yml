sudo: required
dist: trusty
language: cpp

env:
  global:
    - /usr/local/bin:$PATH

# NOTE: The compiler setting is unused. It simply makes the display on
# travis-ci.org more readable.
matrix:
    include:
        # QUICKTEST----------------------------------------------------------------
        - compiler: gcc5
          env: COMPILER=g++ C_COMPILER=gcc BUILD_TYPE=Quicktest
        - compiler: gcc5-32
          addons:
            apt:
              packages:
                - g++-multilib
          env: COMPILER=g++ C_COMPILER=gcc BUILD_TYPE=Quicktest EXTRA_FLAGS="-m32"
        #
        #
        - compiler: clang3.7
          env: COMPILER=clang++ C_COMPILER=clang BUILD_TYPE=Quicktest
        - compiler: clang3.7-32
          env: COMPILER=clang++ C_COMPILER=clang BUILD_TYPE=Quicktest EXTRA_FLAGS="-m32"
        #
        #
        - compiler: gcc6
          addons:
            apt:
              sources:
                - ubuntu-toolchain-r-test
              packages:
                - g++-6
          env:
            - COMPILER=g++-6 C_COMPILER=gcc-6  BUILD_TYPE=Quicktest
        - compiler: gcc6-32
          addons:
            apt:
              sources:
                - ubuntu-toolchain-r-test
              packages:
                - g++-6
          env:
            - COMPILER=g++-6 C_COMPILER=gcc-6  BUILD_TYPE=Quicktest EXTRA_FLAGS="-m32"
        #
        #
        - compiler: clang3.8
          addons:
            apt:
              packages:
                clang-3.8
          env: COMPILER=clang++-3.8 C_COMPILER=clang-3.8 BUILD_TYPE=QuickTest
        - compiler: clang3.8-32
          addons:
            apt:
              packages:
                clang-3.8
          env: COMPILER=clang++-3.8 C_COMPILER=clang-3.8 BUILD_TYPE=QuickTest EXTRA_FLAGS="-m32"
        ##
        ##
        #- compiler: clang3.9
        #  addons:
        #    apt:
        #      sources:
        #        - llvm-toolchain-precise-3.9
        #      packages:
        #        clang-3.9
        #  env: COMPILER=clang++-3.9 C_COMPILER=clang-3.9 BUILD_TYPE=QuickTest
        #- compiler: clang3.9-32
        #  addons:
        #    apt:
        #      sources:
        #        - llvm-toolchain-precise-3.9
        #      packages:
        #        clang-3.9
        #  env: COMPILER=clang++-3.9 C_COMPILER=clang-3.9 BUILD_TYPE=QuickTest EXTRA_FLAGS="-m32"
        ##
        ##
        #- compiler: clang4.0
        #  addons:
        #    apt:
        #      sources:
        #        - llvm-toolchain-precise-4.0
        #      packages:
        #        clang-4.0
        #  env: COMPILER=clang++-4.0 C_COMPILER=clang-4.0 BUILD_TYPE=QuickTest
        #- compiler: clang4.0-32
        #  addons:
        #    apt:
        #      sources:
        #        - llvm-toolchain-precise-4.0
        #      packages:
        #        clang-4.0
        #  env: COMPILER=clang++-4.0 C_COMPILER=clang-4.0 BUILD_TYPE=QuickTest EXTRA_FLAGS="-m32"
        #
        # DEBUG----------------------------------------------------------------
        # debug builds are slower, so there's less testing.
        - compiler: gcc5
          env: COMPILER=g++ C_COMPILER=gcc BUILD_TYPE=Debug
        - compiler: gcc5-32
          addons:
            apt:
              packages:
                - g++-multilib
          env: COMPILER=g++ C_COMPILER=gcc BUILD_TYPE=Debug EXTRA_FLAGS="-m32"
        #
        #
        - compiler: clang3.7
          env: COMPILER=clang++ C_COMPILER=clang BUILD_TYPE=Debug
        - compiler: clang3.7-32
          env: COMPILER=clang++ C_COMPILER=clang BUILD_TYPE=Debug EXTRA_FLAGS="-m32"
        # COVERAGE----------------------------------------------------------------
        - compiler: gcc
          addons:
            apt:
              packages:
                - lcov
          env: COMPILER=g++ C_COMPILER=gcc BUILD_TYPE=Coverage

before_script:
    #- sudo add-apt-repository -y ppa:george-edison55/cmake-3.x
    #- sudo apt-get update
    #- sudo apt-get -y install cmake
    - mkdir build && cd build

install:
  - $COMPILER --version
  - if [ "${BUILD_TYPE}" == "Coverage" -a "${TRAVIS_OS_NAME}" == "linux" ]; then
      PATH=~/.local/bin:${PATH};
      pip install --user --upgrade pip;
      pip install --user cpp-coveralls;
    fi

script:
    - cmake -DCMAKE_C_COMPILER=${C_COMPILER} -DCMAKE_CXX_COMPILER=${COMPILER} -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DCMAKE_CXX_FLAGS="${EXTRA_FLAGS}" ..
    - make CTEST_OUTPUT_ON_FAILURE=1 c4stl-test

after_success:
  - echo "Success!"
  #- if [ "${BUILD_TYPE}" == "Coverage" -a "${TRAVIS_OS_NAME}" == "linux" ]; then
  #    coveralls --include src --include include --gcov-options '\-lp' --root .. --build-root .;
  #  fi

sudo: required
